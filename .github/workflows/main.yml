name: Main

on: push

jobs:
  test:
    name: ðŸ§ª Tests
    strategy:
      matrix:
        os: [ "ubuntu-latest", "windows-latest" ]
    runs-on: ${{ matrix.os }}
    steps:
      -
        name: Checkout repository
        uses: actions/checkout@v2
      -
        name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
          architecture: x64
      -
        name: Upgrade Python Pip
        run: python -m pip install --upgrade pip
      -
        name: Setup Poetry
        run: python -m pip install poetry==1.1.4
      -
        name: Setup project dependencies
        run: poetry install
      -
        name: Export project dependencies
        run: poetry export --dev --format=requirements.txt --without-hashes --output requirements.txt
      -
        name: Check project dependencies
        run: poetry run safety check --file requirements.txt
      -
        name: Run Flake8 linting
        run: poetry run flake8 src tests
      -
        name: Run MyPy type checks
        run: poetry run mypy src
      -
        name: Run test suite
        run: poetry run pytest
      -
        name: Check test suite coverage
        run: poetry run pytest --cov
        continue-on-error: true
      -
        name: Run TypeGuard type checks
        run: poetry run pytest --typeguard-packages mapaction_rds_dashboard

  build:
    name: ðŸ“¦ Build
    needs: test
    runs-on: "ubuntu-latest"
    if: github.ref == 'refs/heads/main'
    steps:
      -
        name: Checkout repository
        uses: actions/checkout@v2
      -
        name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
          architecture: x64
      -
        name: Setup Poetry
        run: python -m pip install poetry==1.1.4
      -
        name: Build project package
        run: poetry build
      -
        name: Store package artefacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

  verify:
    name: ðŸ“‹ Verify
    needs: build
    strategy:
      matrix:
        os: [ "ubuntu-latest", "windows-latest" ]
    runs-on: ${{ matrix.os }}
    ## if commit is in the 'main' branch
    if: github.ref == 'refs/heads/main'
    steps:
      -
        name: Retrieve package artefacts
        uses: actions/download-artifact@v2
        with:
          name: dist
      -
        name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
          architecture: x64
      -
        name: Upgrade Python Pip
        run: python -m pip install --upgrade pip
      -
        name: Test installing project package
        run: python -m pip install --find-links=. mapaction_rds_dashboard

  release:
    name: ðŸšš Release
    needs: verify
    runs-on: "ubuntu-latest"
    ## if commit is a tag
    # if: startsWith(github.ref, 'refs/tags/v')
    steps:
      -
        name: Retrieve package artefacts
        uses: actions/download-artifact@v2
        with:
          name: dist
      -
        name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
          architecture: x64
      -
        name: Upgrade Python Pip
        run: python -m pip install --upgrade pip
      -
        name: Setup Poetry
        run: python -m pip install poetry==1.1.4
      -
        name: Authenticate with PyPi
        run: poetry config pypi-token.testpypi xxx
      -
        name: Publish package to PyPi
        run: poetry publish --repository testpypi
        env:
          POETRY_PYPI_TOKEN_TESTPYPI: ${{ secrets.POETRY_PYPI_TOKEN_TESTPYPI }}
